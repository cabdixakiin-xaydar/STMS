# Generated by Django 4.2.7 on 2025-06-22 09:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('accommodation_type', models.CharField(choices=[('HOTEL', 'Hotel'), ('LODGE', 'Lodge'), ('GUESTHOUSE', 'Guesthouse'), ('RESORT', 'Resort'), ('CAMP', 'Camp')], max_length=20, verbose_name='Type')),
                ('address', models.TextField(verbose_name='Address')),
                ('contact_phone', models.CharField(max_length=20, verbose_name='Contact Phone')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Contact Email')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('star_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Star Rating')),
                ('room_capacity', models.PositiveIntegerField(verbose_name='Room Capacity')),
                ('price_range_min', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Min Price')),
                ('price_range_max', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Max Price')),
                ('amenities', models.TextField(blank=True, verbose_name='Amenities')),
                ('check_in_time', models.TimeField(default='14:00', verbose_name='Check-in Time')),
                ('check_out_time', models.TimeField(default='12:00', verbose_name='Check-out Time')),
            ],
            options={
                'verbose_name': 'Accommodation',
                'verbose_name_plural': 'Accommodations',
                'ordering': ['-star_rating', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AccommodationImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='accommodation_images/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Caption')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Image')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('number_of_people', models.PositiveIntegerField(default=1, verbose_name='Number of People')),
                ('special_requests', models.TextField(blank=True, verbose_name='Special Requests')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed')], default='PENDING', max_length=20, verbose_name='Status')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total Amount')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Amount Paid')),
                ('booking_reference', models.CharField(max_length=20, unique=True, verbose_name='Booking Reference')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/', verbose_name='QR Code')),
                ('accommodation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.accommodation', verbose_name='Accommodation')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('location', models.CharField(max_length=100, verbose_name='Location')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_destinations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Destination',
                'verbose_name_plural': 'Destinations',
                'ordering': ['-is_featured', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('contact_type', models.CharField(choices=[('POLICE', 'Police'), ('HOSPITAL', 'Hospital'), ('AMBULANCE', 'Ambulance'), ('FIRE', 'Fire Department'), ('TOURISM_POLICE', 'Tourism Police'), ('EMBASSY', 'Embassy')], max_length=20, verbose_name='Type')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('location', models.CharField(max_length=100, verbose_name='Location')),
                ('available_24_7', models.BooleanField(default=True, verbose_name='Available 24/7')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Emergency Contact',
                'verbose_name_plural': 'Emergency Contacts',
                'ordering': ['contact_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('discount_percentage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Discount Percentage')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('target_audience', models.CharField(choices=[('ALL', 'All Customers'), ('DIASPORA', 'Diaspora'), ('STUDENTS', 'Students'), ('FAMILIES', 'Families'), ('LOCALS', 'Local Residents')], default='ALL', max_length=20, verbose_name='Target Audience')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('image', models.ImageField(blank=True, null=True, upload_to='promotion_images/', verbose_name='Promotion Image')),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
                'ordering': ['-is_active', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('make', models.CharField(max_length=50, verbose_name='Make')),
                ('model', models.CharField(max_length=50, verbose_name='Model')),
                ('year', models.PositiveIntegerField(verbose_name='Year')),
                ('vehicle_type', models.CharField(choices=[('SEDAN', 'Sedan'), ('SUV', 'SUV'), ('MINIVAN', 'Minivan'), ('BUS', 'Bus'), ('4X4', '4x4')], max_length=10, verbose_name='Type')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacity')),
                ('license_plate', models.CharField(max_length=20, unique=True, verbose_name='License Plate')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available')),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Daily Rate')),
                ('features', models.TextField(blank=True, verbose_name='Features')),
                ('image', models.ImageField(blank=True, null=True, upload_to='vehicle_images/', verbose_name='Vehicle Image')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['-is_available', 'make', 'model'],
            },
        ),
        migrations.CreateModel(
            name='TourPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Package Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('duration_days', models.PositiveIntegerField(verbose_name='Duration (days)')),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Base Price (USD)')),
                ('discount_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount Percentage')),
                ('package_type', models.CharField(choices=[('ADVENTURE', 'Adventure'), ('CULTURAL', 'Cultural'), ('HISTORICAL', 'Historical'), ('BEACH', 'Beach'), ('COMBINED', 'Combined')], max_length=20, verbose_name='Package Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('highlights', models.TextField(blank=True, verbose_name='Package Highlights')),
                ('inclusions', models.TextField(blank=True, verbose_name="What's Included")),
                ('exclusions', models.TextField(blank=True, verbose_name="What's Not Included")),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_packages', to=settings.AUTH_USER_MODEL)),
                ('destinations', models.ManyToManyField(to='tms.destination', verbose_name='Destinations')),
            ],
            options={
                'verbose_name': 'Tour Package',
                'verbose_name_plural': 'Tour Packages',
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TourGuide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('license_number', models.CharField(max_length=50, unique=True, verbose_name='License Number')),
                ('languages', models.CharField(max_length=100, verbose_name='Languages')),
                ('years_of_experience', models.PositiveIntegerField(verbose_name='Years of Experience')),
                ('specialization', models.CharField(max_length=100, verbose_name='Specialization')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available')),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Hourly Rate')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='Rating')),
                ('bio', models.TextField(blank=True, verbose_name='Biography')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Tour Guide',
                'verbose_name_plural': 'Tour Guides',
                'ordering': ['-is_available', '-rating'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.PositiveIntegerField(choices=[(1, '★☆☆☆☆ - Poor'), (2, '★★☆☆☆ - Fair'), (3, '★★★☆☆ - Good'), (4, '★★★★☆ - Very Good'), (5, '★★★★★ - Excellent')], verbose_name='Rating')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='tms.booking', verbose_name='Booking')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Reviewer')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('payment_method', models.CharField(choices=[('EDAHAB', 'Edahab'), ('ZAAD', 'Zaad'), ('CASH', 'Cash'), ('CREDIT_CARD', 'Credit Card'), ('BANK_TRANSFER', 'Bank Transfer')], max_length=20, verbose_name='Payment Method')),
                ('transaction_id', models.CharField(max_length=100, verbose_name='Transaction ID')),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20, verbose_name='Payment Status')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='tms.booking', verbose_name='Booking')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.CharField(choices=[('BOOKING', 'Booking'), ('PAYMENT', 'Payment'), ('WEATHER', 'Weather Alert'), ('SECURITY', 'Security Alert'), ('PROMOTION', 'Promotion'), ('SYSTEM', 'System Notification'), ('REVIEW', 'Review')], max_length=20, verbose_name='Type')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('is_read', models.BooleanField(default=False, verbose_name='Read')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Related Object')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DestinationImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='destination_images/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Caption')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Image')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='tms.destination')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Uploaded By')),
            ],
            options={
                'verbose_name': 'Destination Image',
                'verbose_name_plural': 'Destination Images',
                'ordering': ['-is_featured', '-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='guide',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.tourguide', verbose_name='Guide'),
        ),
        migrations.AddField(
            model_name='booking',
            name='tour_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.tourpackage', verbose_name='Tour Package'),
        ),
        migrations.AddField(
            model_name='booking',
            name='vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.vehicle', verbose_name='Vehicle'),
        ),
        migrations.AddField(
            model_name='accommodation',
            name='destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tms.destination', verbose_name='Destination'),
        ),
        migrations.AddField(
            model_name='accommodation',
            name='images',
            field=models.ManyToManyField(blank=True, to='tms.accommodationimage'),
        ),
    ]
